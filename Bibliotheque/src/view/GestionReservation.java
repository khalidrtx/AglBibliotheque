
package view;

import Controleur.EmpruntControleur;
import Controleur.LivreControleur;
import Controleur.ReservationControleur;
import Controleur.UtilisateurControleur;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.EmpruntBibliotheque;
import model.Livre;
import model.ReservationBibliotheque;

/**
 *
 * @author khali
 */
public class GestionReservation extends javax.swing.JFrame {

    /**
     * Creates new form GestionReservation
     */
    public GestionReservation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdvalider = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableReservation = new javax.swing.JTable();
        txtetudiant = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbTime = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        cmdvalider.setBackground(new java.awt.Color(51, 0, 255));
        cmdvalider.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmdvalider.setForeground(new java.awt.Color(255, 255, 255));
        cmdvalider.setText("Valider");
        cmdvalider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdvaliderActionPerformed(evt);
            }
        });

        tableReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane2.setViewportView(tableReservation);

        txtetudiant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtetudiantKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Annuler");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Veuillez choisir le délai de réservation:");

        cmbTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTimeActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 0, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Retour");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Recherche par Reservataire");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(213, 213, 213))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtetudiant))))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdvalider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtetudiant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdvalider)
                        .addGap(30, 30, 30)
                        .addComponent(jButton1)))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        remplirCmb();
        Listing();
    }//GEN-LAST:event_formWindowOpened

    private void cmdvaliderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdvaliderActionPerformed
        int row =tableReservation.getSelectedRow();
        if(cmbTime.getSelectedIndex()==0){
             JOptionPane.showMessageDialog(null,"Veuiller selectionne la duree d'emprunt");
             return;
        }
        if(row==-1){
             JOptionPane.showMessageDialog(null,"Veuiller selectionne un enregistrement");
             return;
        }
        int reservationID=Integer.parseInt(tableReservation.getValueAt(row, 0).toString());
             Date d=getDatedeJour();
         ReservationBibliotheque r= R.getAllReservedLivresById(reservationID);
             
        try {
             R.valider(reservationID);
             E.Emprunt(r.getReservataire().getId(), (java.sql.Date) d,r.getLivre().getId());
             Listing();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }    
    }//GEN-LAST:event_cmdvaliderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   int row =tableReservation.getSelectedRow();

        if(row!=-1){
          int reservationID=Integer.parseInt(tableReservation.getValueAt(row, 0).toString());
          R.Supprimer(reservationID);
          Listing();
        }else{
             JOptionPane.showMessageDialog(null,"Veuiller selectionne un enregistrement");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTimeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  java.awt.EventQueue.invokeLater(new Runnable() {
                                    public void run() {
                                        new MenuAdmin().setVisible(true);
                                    }
                    });
  this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtetudiantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtetudiantKeyReleased
search(txtetudiant.getText().trim());

    }//GEN-LAST:event_txtetudiantKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbTime;
    private javax.swing.JButton cmdvalider;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableReservation;
    private javax.swing.JTextField txtetudiant;
    // End of variables declaration//GEN-END:variables
private UtilisateurControleur u= new UtilisateurControleur();
private LivreControleur l=new LivreControleur();
private ReservationControleur R= new ReservationControleur();
private EmpruntControleur E= new EmpruntControleur();

private void Listing(){
       ArrayList<ReservationBibliotheque> tab=R.getAllReservedLivres();
       DefaultTableModel dm = new DefaultTableModel(null,new String[]{"ID","Reservataire","Livre","date Reservation"});
       dm.setNumRows(0);
       for(ReservationBibliotheque r:tab){
           Object[] m={r.getId(),r.getReservataire().getNom()+' '+r.getReservataire().getPrenom(),r.getLivre().getTitre(),r.getDate()};
           dm.addRow(m);
       }
       tableReservation.setModel(dm);

}
private void search(String texte){
       ArrayList<ReservationBibliotheque> tab=R.Search(texte);
       DefaultTableModel dm = new DefaultTableModel(null,new String[]{"ID","Reservataire","Livre","date Reservation"});
       dm.setNumRows(0);
       for(ReservationBibliotheque r:tab){
           Object[] m={r.getId(),r.getReservataire().getNom()+' '+r.getReservataire().getPrenom(),r.getLivre().getTitre(),r.getDate()};
           dm.addRow(m);
       }
       tableReservation.setModel(dm);

}
public void remplirCmb(){
    
    cmbTime.removeAllItems();
     cmbTime.addItem("choisir");
    for(int i =1;i<=10;i++){
        cmbTime.addItem(i+" jour");
    }
}
public Date getDatedeJour(){
        LocalDate currentDate = LocalDate.now();
        int daysToAdd = 0; // initialize the variable with 0
        int numDay=cmbTime.getSelectedIndex();
        // switch statement to determine the number of days to add
        switch (numDay) {
            case 1 -> daysToAdd = 1;
            case 2 -> daysToAdd = 2;
            case 3 -> daysToAdd = 3;
            case 4 -> daysToAdd = 4;
            case 5 -> daysToAdd = 5;
            case 6 -> daysToAdd = 6;
            case 7 -> daysToAdd = 7;
            case 8 -> daysToAdd = 8;
            case 9 -> daysToAdd = 9;
            case 10 -> daysToAdd = 10;
            default -> System.out.println("Invalid value for variable");
        }
        // add more cases for values up to 10

        // Add the number of days to the current date
        LocalDate newDate = currentDate.plusDays(daysToAdd);
       return java.sql.Date.valueOf(newDate);
}
//public void remplirCmb(){
//    ArrayList<Utilisateur> tab =u.getAllById();
//    cmbUser.removeAllItems();
//    cmbUser.addItem("All");
//    for(Utilisateur Utilisateur:tab){
//        cmbUser.addItem(Utilisateur.getPrenom()+" "+Utilisateur.getNom());
//    }
//}

//public void listingById(int id) {
//     DefaultTableModel m = new DefaultTableModel(null,new String[]{"ID","ISBN","Titre","Auteur","Description"});
//  m.setNumRows(0);
//    ArrayList<Livre> tab = l.getAllByUser(id);
//    for (Livre livre : tab) {
//        Object[] o = {livre.getId(), livre.getIsbn(), livre.getTitre(), livre.getAuteur(), livre.getDescription()};
//        m.addRow(o);
//    }
//    tableReservation.setModel(m);
//}


//public void Listing(){
//       ArrayList<Livre> tab=l.getAllById();
//       DefaultTableModel dm = new DefaultTableModel(null,new String[]{"ID","ISBN","Titre","Auteur","Description"});
//       dm.setNumRows(0);
//       for(Livre livre:tab){
//           Object[] m={livre.getId(),livre.getIsbn(),livre.getTitre(),livre.getAuteur(),livre.getDescription()};
//           dm.addRow(m);
//       }
//       tableReservation.setModel(dm);
//}

}
